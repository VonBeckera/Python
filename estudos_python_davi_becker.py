# -*- coding: utf-8 -*-
"""Estudos_python_davi_becker.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X1Q_OqUMduvTnKtkodTCuTOKhyOkyYmW

# Estudos de Faculdade e Cursos
"""

#1 Manipulando Strings

a = input('Digite uma palavra: ')
print('O tipo digitado é: ', type(a))
print('O tipo digitado tem espaços: ', a.isspace())
print('O tipo digitado é um número: ', a.isnumeric())
print('O tipo digitado é alfa numerico: ', a.isalnum())
print('O tipo digitado e alfabetico: ', a.isalpha())
print('O tipo está capitalizado: ', a.istitle())

#Exmplos de precedencias
# Exemplo 1
n1 = 5
n2 = 2
n3 = 3
s = n1+n2*n3
print(s)

# Exemplo 2
n4 = 3
n5 = 5
n6 = 4
n7 = 2
s1 = n4*n5+n6**n7
print(s1)
# Exemplo 3

n8 = 3
n9 = 5
n0 = 4
n11 = 2
s2 = n8*(n9+n0)**n11
print(s2)

nome = input('Qual o seu nome? ')
print(f'Seja Bem Vindo {nome}!')

n1 = int(input('Digite um valor ' ))
n2 = int(input('Digite outro valor ' ))
print(f'A soma vale {n1+n2}')

# Conversão de valores em dólar

d = float(input('Digite o valor que você tem na carteria: '))
c = d/5.07
print(f'O valor de {d} Reais equivale a {c:.2f} dólares')

#Calcular desconto de x% do valor de um produto
n = input('Digite seu nome para acessar o sistema: ')
print(f'Seja bem vido {n} ao sistema de cáculos de descontos')
v = float(input('Digite o valor do produto: '))
d = float(input('Digite o valor do desconto: '))
c = v - (v * d / 100)
print(f'O valor final com o Desconto de {d:.0f}% é de R${c:.2f}')

# Calcular a área de uma parede retangular e a quantidade de tinta a ser usada
# 1 litro de tinta pinta 2m² de parede
# Área - Base(b) x Altura(h)
n = input('Digite seu nome ')
print(f'Seja Bem vindo {n} ao sistema de cácluo de pintura de área construída')
b = float(input('Digite o valor da Base em metros: ' ))
h = float(input('Digite o valor da altura em metros: ' ))
a = (b*h)
t = (a / 2)
print(f'A área tem {a} m² e a quantidade de tinta nescessária para pintar é de {t} Litros de tinta')

#Teste de ocultar senha
import getpass
s = getpass.getpass(prompt='Digite sua senha ')
s2 = "123"

if s == s2:
    print('Seja Bem vindo ao sistema')

else:
    print('Senha inválida!')

#Ler salário e mostre o novo salário com 15% de aumento
n = input('Digite seu nome: ')
print(f'Seja bem vindo {n} ao sistema de cálculo de salários')
print('Este sistema irá calcular o aumento salarial de 15% sobre o salário informado')
s = float(input('Informe o valor do salário: '))
c = (s * 0.15)+s
p = c-s
print(f'O salário de R${s:.2f} com aumento de 15% é de R${c:.2f} o valor do aumento foi de R$: {p:.2f}')

#Sucessor e antecessor de um número digitado
n = int(input('Digite um número: '))
print(f'O sucessor do número {n} é: {n+1}, é seu antecessor é: {n-1}')

#Crie um algoritmo que leia um número e mostre o seu dobro, triplo e raiz quadrada.
import math
n = int(input('Digite um número e vamos calulcar seu dobro, triplo e raiz quadrada: '))
d = n*2
t = n*3
r = math.sqrt(n)
l = n**(1/2)
print(f'O dobro do número {n} é: {d}\n ---- O triplo de {n} é: {t}\n ---- A raiz quadrada de {n} é: {r}')
print(l)

#Desenvolva um programa que leia as duas notas de um aluno, calcule e mostre a sua média.
import getpass
n = input('Digite seu nome: ')
s2 = "123"

while True:
    s = getpass.getpass(prompt='Digite sua senha: ')
    if s == s2:
        print(f'Seja bem vindo {n} ao sistema de notas e médias acadêmicas')
        break
    else:
        print('Senha inválida, tente novamente.')

while True:
    op = int(input('Digite 1 para sair ou 2 para um novo aluno: '))

    if op == 1:
        print('Obrigado por utilizar nosso sistema, até logo!')
        break

    elif op == 2:
        a = input('Digite o nome do aluno: ')
        nota1 = float(input(f'Digite a primeira nota do Aluno {a}: '))
        nota2 = float(input(f'Digite a segunda nota do aluno {a}: '))
        media = (nota1 + nota2) / 2

        if media >= 7:
            print(f'O aluno {a} foi aprovado com Média {media}')
        else:
            print(f'O aluno {a} foi reprovado com média {media}')

#Programa de conversão de metros para CM e MM

me = int(input('Digite o valor em metros: '))
cm = me*100 
mm = me*1000
print(f'O valor de {me} metros equivale a: {cm} Centímetros e {mm} Milímetros')

#Tabuada de um número digitado
print('Bem vindo a tabuada de um número digitado')
n = int(input('Digite um número: '))
print(f'{n} x {1} = {n*1}')
print(f'{n} x {2} = {n*2}')
print(f'{n} x {3} = {n*3}')
print(f'{n} x {4} = {n*4}')
print(f'{n} x {5} = {n*5}')
print(f'{n} x {6} = {n*6}')
print(f'{n} x {7} = {n*7}')
print(f'{n} x {8} = {n*8}')
print(f'{n} x {9} = {n*9}')
print(f'{n} x {10} = {n*10}')

print('Bem vindo a tabuada de um número digitado')
n = int(input('Digite um número: '))
for i in range(1, 11):
    print(f'{n} x {i} = {n*i}')

#Convertendo temperatura

t = float(input('Digite a temperatura em Celsius: '))
f1 = (1.8 * t) + 32
print(f'Converter {t}°C para a escala Fahrenheit : {f1}°')

# Escreva um programa que pergunte a quantidade de Km percorridos por 
#um carro alugado e a quantidade de dias pelos quais ele foi alugado.
#Calcule o preço a pagar, sabendo que o carro custa R$60 por dia e R$0,15 por Km rodado.

print('Seja bem vido ao Locacar')
d = 60
d2 = int(input('Informe a quantidade de dias de locação: '))
km = float(input('Informe a kilometragem final: '))
cpkm = km * 0.15
cd = d * d2
cf = cd+cpkm
print(f' O custo das diárias de {d2} dias foram de R${cd:.2f}\n o custo da kilomêtragem de {km} KM foi de R${cpkm:.2f}\n o valor final a ser pago pelo aluguel do veículo é de R$ {cf:.2f}')

"""MÓDULO 2

"""

!pip install emoji
import emoji
print(emoji.emojize("Olá mundo :sunglasses: "))

from math import trunc
n = float(input('Digite um numero qualquer: '))
print(f' A porção inteira do número digitado {n} é: {trunc(n)}')

from math import hypot
copo = int(input('Digite o valor do cateto oposto: '))
cadj = int(input('Digite o valor do cateto adjacente: '))

hip = hypot(copo,cadj)

print(f'O valor da Hipotenusa é: {hip}')

from  math import sin,cos,tan,radians

a = int(input('Digite o valor do ângulo: '))

r = math.radians(a)
cosseno = math.cos(r)
seno = math.sin(r)
tangente = math.tan(r)

print(f'O valor do seno é {sin(r)} do cosseno é {cos(r)} e da tangente é {tan(r)} o ângulo em radianos é de {r}')

from random import choice
nome = input('Digite o Primeiro nome: ')
nome2 = input('Digite o segundo nome: ')
nome3 = input('Digite o terceiro nome: ')
nome4 = input('Digite o quarto nome: ')
lista = [nome, nome2, nome3, nome4]
escolhido = choice(lista)
print(f'O aluno escolhido é: {escolhido}')

import random
nome = input('Digite o Primeiro nome: ')
nome2 = input('Digite o segundo nome: ')
nome3 = input('Digite o terceiro nome: ')
nome4 = input('Digite o quarto nome: ')
lista = [nome, nome2, nome3, nome4]
random.shuffle(lista)
print(f'A ordem de apresentação será: {lista}')

import random

nomes = []

print("Digite 4 nomes separados por enter: ")

for i in range(4):
    nome = input()
    nomes.append(nome)

aluno = random.choice(nomes)

print(f'O nome é: {aluno}')

import random
nomes = ['Davi','Pedro','Raissa','Claudia','Silvia','Amanda','Fabiana']
sorteados = random.sample(nomes, 7)
for i , nome in enumerate(sorteados):
  print(f'{i + 1}º nome sorteado: {nome}')

!pip install pygame
import pygame
pygame.init()
pygame.mixer.init()
pygame.mixer.music.load("/content/drive/MyDrive/Contas/teste.mp3")
pygame.mixer.music.play()

import requests

url = "https://justa-falta.vercel.app/#"
payload = {"q": "' OR (SELECT COUNT(*) FROM all_tables) > 1 --"}

response = requests.get(url, params=payload)

if "error" not in response.text:
    print("SQL Injection vulnerability detected!")
else:
    print("No SQL Injection vulnerability detected.")

"""AULA 09 - Manipulando Textos"""

#manipulando texto

frase = ('CURSO EM VIDEO PYTHON')# variavel frase recebendo valor ("")
frase2 = ('CURSO EM VIDEO PYTHON')# variavel frase recebendo valor ("")

nova_frase = frase.replace('VIDEO','XUXA ')#Substituindo uma string da frase por outra metodo replace

#palavra_antiga = input(f'Digite a palavra antiga que voce quer substiruir na frase {frase}: ')
#palavra_nova = input(f'Digite agora a palavra nova que sera inserida no lugar da palavara digita {palavra_antiga}: ')
#frase3 = frase.replace(palavra_antiga, palavra_nova)



frase_maiuscula = frase2.upper()#converte tudo para maisculo

frase_minuscula = frase.lower()#capitalize(): esse método converte a primeira letra da string para maiúscula e as demais para minúsculas.

frase_primeira_letra = frase.capitalize()

contador = len(frase) #len () faz a contagem de todas as strings da frase

a = frase.count('o') #count() faz a contagem de um determinado numero de vezes que um caracter ou palavra se repete

indice = frase.find('em')#étodo de string que retorna o índice da primeira ocorrência de uma sub-string em uma string

frasse_Title = frase.title()#title(): esse método converte a primeira letra de cada palavra da string para maiúscula e as demais para minúsculas.

dividido = frase.split()

#print(frase3)
#print(frase[3])
#
print(frase.find('VIDEO'))
print(dividido)
print(dividido[3])
#print(frasse_Title)
#print(frase_primeira_letra)
#print(frase_minuscula)
#print(frase_maiuscula)
#print(nova_frase)
#print(indice)#indice da primeira ocorrência de uma sub-string em uma string
#print(a)# imprime o numero de ocorrencias de um caracter string ou palavras
#print(contador)# imprime o numero total de caracteres de uma string
#print(frase[5:21])# começa do indice 5 e vai até o indice 21
#print(frase[9:21:2])# começa a ler do indice 9 ao 21(esclui o 21)pulando 2 casas por vez
#print(frase[:21])# ler do indice 0 até onde foi informado, neste caso 21 ele imprime a frase toda pois ela tem 21 indices

!pip install phonenumbers
import phonenumbers
from phonenumbers import geocoder

fone = phonenumbers.parse('+5541999590192')
print('\nLocalização\n')
print(geocoder.description_for_number(fone, 'PT'));

import tkinter as tk
from tkinter import messagebox

root = tk.Tk()
root.withdraw()

result = messagebox.askquestion("Question", "Do you want to continue?")

if result == 'yes':
    print("User wants to continue")
else:
    print("User does not want to continue")

#Exercício Python 22: Crie um programa que leia o nome completo de uma pessoa e mostre:

#– O nome com todas as letras maiúsculas e minúsculas.

#– Quantas letras ao todo (sem considerar espaços).

#– Quantas letras tem o primeiro nome.



nome = str(input('Digite seu nome e sobrenome: ')).strip()

nome1 = nome.split()[0]
contnome1 = len(nome1)
print(f'O seu primero nome é: "{nome1}" , e contém {contnome1} letras')

print(f'Seu nome em maisculo é: {nome.upper()}')
print(f'Seu nome em minusculo é:{nome.lower()}')
espaço = nome.replace(" ", "")
cont = len(espaço)
print(f'Seu nome todo tem {cont} letras')

#Exercício Python 23: Faça um programa que leia um número de 0 a 9999 e mostre na tela cada um dos dígitos separados.



n = int(input('Digite um número de 0 a 9999: '))
unidade = n % 10
dezena = (n // 10) % 10
centena = (n // 100 ) % 10
milhar =  (n // 1000) % 10
print(f'unidade {unidade}\ndezena {dezena}\ncentena {centena}\nmilhar {milhar}\n')

#024: Crie um programa que leia o nome de uma cidade diga se ela começa ou não com o nome "SANTO".

cidade = str(input('Digite o nome da cidade: ')).upper()
if cidade.split()[0] == 'SANTO':
  print('A cidade começa com o nome SANTO ')
else:
   print('A cidade não começa com o nome SANTO')

#Exercício Python 24: Crie um programa que leia o nome de uma cidade diga se ela começa ou não com o nome “SANTO”.

c = str(input('Digite o nome da sua cidade: ')).strip()
v = c.split()[0].upper() == 'SANTO'
print(f'A cidade digitada {c}\n e para santo {v}')

cidade = input("Digite o nome da cidade: ")

if cidade.upper().startswith("SANTO"):
    print("O nome da cidade começa com SANTO")
else:
    print("O nome da cidade não começa com SANTO")

#025: Crie um programa que leia o nome de uma pessoa e diga se ela tem "SILVA" no nome.

name = str(input('Digite seu nome completo: ')).upper()

if name.find('SILVA') != -1:
  print(f'O nome {name} tem SILVA')
else:
  print(f'O nome {name} não tem SILVA')

#025: Crie um programa que leia o nome de uma pessoa e diga se ela tem "SILVA" no nome.

name = str(input('Digite seu nome completo: ')).upper()

if 'SILVA' in name:
  print(f'O nome {name} tem SILVA')
else:
  print(f'O nome {name} não tem SILVA')

n = str(input("Digite seu nome completo: ")).strip()
print(f'Existe "Silva" no seu nome? { "SILVA" in n.upper() }')

#026: Faça um programa que leia uma frase pelo teclado e mostre quantas 
#vezes aparece a letra "A", em que posição ela aparece a primeira vez e em que posição ela aparece a última vez.
palavra = str(input('Digite uma frase: ')).upper()

rep = palavra.count('A')
primeira = palavra.find('A')
ultima = palavra.rfind('A')

print(f'A frase {palavra} tem a letra "A" {rep} vezes\n a primeira posição é em {primeira}\n e a ultima posição é em {ultima}\n')

#027: Faça um programa que leia o nome completo de uma pessoa, mostrando em seguida o primeiro e o último nome separadamente.
nome_completo = str(input('Digite seu nome completo: '))
lista = nome_completo.split()

primeiro_nome = lista[0]

ultimo_nome = lista[-1]

print(f'O primeiro nome de {nome_completo}\n é {primeiro_nome}\n e o último nome é {ultimo_nome}\n ')

"""MÓDULO 10"""

n = str(input('Digite seu nome: ')).upper()
if n == 'DAVI':
  print(f'Seja bem vindo {n}')
else:
  print('Usuario não autorizado')  
print('Sessão Finalizada')

print('Seja Bem vindo digite seu nome e senha')
n = str(input('Digite seu nome: ')).upper()
s = int(input('Digite sua senha: '))
if n == 'DAVI' and s == 123:
    print('Seja bem vindo ao sistema de notas')
    nota1 = float(input('Digite a primeira nota: '))
    nota2 = float(input('Digite a segunda nota: '))
    media = (nota1+nota2)/2
    if media >= 6.0:
      print(f'Parabéns aluno aprovado com média {media}')
    else:
        print('Aluno em recuperação')
else:
  print('Usuário não registrado e senha inválida')
print('FIM DO PROGRAMA')

#exercício 28 gerar um numero aleatorio e verificar se o numero digitado e o correto
import random
from time import sleep
print('- \u2620 -'*20)
print('Pensei em um número: ? ')
print('- \u2620 -'*20)
sorteio = random.randint(0,5)
n = int(input('Digite um numero entre 0 e 5 e veja se voce advinhou o numero que pensei: '))
print('Processando...')
sleep(4)
if n == sorteio:
  print('Parabéns você acertou \U0001F973!!')
else:
  print(f'Não foi dessa vez ótario {sorteio} \U0001F921!')

#29 Radar eletrônico
print('Qual a velocidade atual do seu veículo: ')
v = int(input('Digite a velocidade atual: '))
multa = (v - 80)*7
vat = v - 80

if v > 80:
   print(f'A sua velocidade de {v}Km/h você esta acima do limite de velocidadee em {vat}km/h \U0001F480 e isso gerou uma multa de R${multa:.2f} \U0001F973!! ')
   
else:
  print('Você está no limite correto de velocidade da via' )

# 30 par ou ímpar

p = int(input('Digite um número inteiro: '))

if p % 2 == 0 :
  print('O numero é PAR')

else:
  print('O número e ímpar')

#31
#custo da passagem da viajem

km = float(input('Digite a distancia em KM da viajem: '))

if km <= 200:
  custo = km * 0.50
else:
   custo = km * 0.45 
   
print(f'O valor da passagem de {km}Km é de R${custo}')

#32 Verificar se o ano e Bissexto
from datetime import date
ano = int(input('Digite o ano:   ou 0 para verificar o ano atual'))

if ano == 0:
  ano = date.today().year

if ano % 4 == 0 and (ano % 100 != 0 or ano % 400 == 0):
  print(f'O ano {ano} é Bissexto')

else:
  print(f'O ano {ano} não é Bissexto')

# 33 maior ou menor número dentre 3

n1 = int(input('Digite um número: '))
n2 = int(input('Digite número 2: '))
n3 = int(input('Digite o número 3: '))

if n1 > n2 and n1 > n3:
  print(f'O numero {n1} é maior')
  
elif n2 > n1 and n2 > n3:
  print(f'O número {n2} é maior')

else:
  print(f'O numero {n3} é maior')

if n1 < n2 and n1 < n3:
  print(f'O número {n1} é menor')

elif n2 < n1 and n2 < n3:
   print(f'O número {n2} é menor') 

else:
  print(f'O número {n3} é menor')

# 34 cálculo de sálario

print('m =====Bem vindo ao sistema de Cálculo de salário=====')

s = float(input('Digite o valor atual do salário do funcionário R$'))

if s <= 1250.00:
  ns = s + ((s*15)/100)
else:
  ns = s + ((s*10 )/ 100)  
print(f'O novo salário é de R${ns}')

#35 formando um triângulo
!pip install colorama
import matplotlib.pyplot as plt
from time import sleep
import colorama
from colorama import Fore

a = float(input('Digite uma valor para a primeira reta : '))
b = float(input('Digite uma valor para a segunda reta : '))
c = float(input('Digite uma valor para a terceira reta : '))

if a < b + c and b < a + c and c < a + b:
  # Calcula as coordenadas dos três vértices do triângulo
  x1, y1 = 0, 0
  x2, y2 = c, 0
  x3 = (a**2 - b**2 + c**2) / (2 * c)
  y3 = (a**2 - x3**2)**0.5

  # Plota o triângulo
  plt.plot([x1, x2, x3, x1], [y1, y2, y3, y1])


  print('Processando...')
  sleep(2)

  #if a == b == c:
   #print('Triângulo equilátero')
   #print('Processando...')
   #sleep(2)
   #plt.show()

  #elif a == b and a != c or a == c and a != b or b == c and b != a:
  # print('Triângulo isosceles')  
  # print('Processando...')
  # sleep(2)
  # plt.show()

  #else:
  # print('Triangulo escaleno')
  # print('Processando...')
  # sleep(2)
  # plt.show()  

  print('Podemos formar um triangulo ')
  plt.show()

else:
 print(Fore.RED + 'Não é possivel fazer um \u25B2' + Fore.RESET)

"""MUNDO 2 Aulas em vídeo"""

#36 - Calculando emprestimo de uma casa
casa = float(input('Digite o valor do imovél R$ '))
tempo = int(input('Digite o numeros de parcelas em meses: '))
salario = float(input('Digite o valor do seu salário R$ '))

prestação = casa / tempo

salario_novo = salario * 0.3

if prestação <= salario_novo:
   print('emprestimo aceito') 

   print(f'O Valor das Parcelas a serem pagas em {tempo} Meses é de R${prestação:.2f} ao Mês')


else:
  print(f'Empréstimo negado o valor da presção R${prestação:.2f} excede o valor de 30% do seu salário')

casa = float(input('\033[35mQual o valor da casa\033[m? '))
salário = float(input('\033[36mQual é o seu salário\033[m? '))
anos = float(input('\033[32mEm quantos anos você vai pagar\033[m? '))
prestação = casa / (anos * 12)

print('-=-' * 20)
if salário * 0.30 >= prestação:
    print('\033[4mParabéns, seu financiamento foi aprovado\033[m!!!')
else:
    print('\033[4mDesculpe, mas seu financiamento foi negado\033[m')

#37 - Transforme um numero em binario, octal e hexadecimal

n = int(input('\033[33m Digite um número inteiro: ' ))

opção = int(input('''\033[34m
[1] para binário 
[2] para octal 
[3] para hexadecimal \n'''))

if opção == 1 :
  binario = bin(n)
  print(f'\033[33m O numero {n} em Binario é {binario[2:]}')
elif opção == 2: 
  octal = oct(n)
  print(f'\033[33m O número {n} em octal é de {octal[2:]}')
elif opção == 3:
  hexa = hex(n)
  print(f'\033[33m O número {n} em hexadecimal é de {hexa[2:]}')

else:
   print('Número inválido!')

n1 = int(input('Digite o primeiro numero: '))
n2 = int(input('Digite o segundo numero: '))

if n1 > n2:
  print(f'O primeiro número digitado e Maior')

elif n2 > n1:
  print('O segundo numero digitado e Maior')  

else:
  print('Os Numeros são iguais ')

from datetime import date #importando a biblioteca datatime

#lendo o ano de nascimento do usuario
ano_nascimento = int(input('Digite seu ano de nascimento com 4 digitos: '))

#selecionando o ano atual
ano_atual = date.today().year

#calculando a idade da pessoa
idade = ano_atual - ano_nascimento

#verificando a data digitada
if ano_nascimento <= 1900:
  print(f'Data {ano_nascimento} inválida')
else:  
#verificando se a idade e maior de 18 anos e quanto anos passaram do alistamento
 if idade > 18:
  exc = idade - 18 #calculando anos que passaram para se alistar

  ano_alistamento = ano_atual - exc #calculando o ano de alistamento

  print(f'Você excedeu o limite de alistamento em {exc} anos, seu alistamento foi em {ano_alistamento}')

# verificando se a idade e menor de 18 anos e informando os anos que faltam par se alistar  
 elif idade < 18:

  exc = 18 - idade #calculando anos que faltam para se alistar

  ano_alistamento = ano_atual + exc #calculando o ano de alistamento

  print(f'Voce ainda esta fora do prazo de alistamento sua idade é de {idade} anos, ainda faltam {exc} anos, seu alistamento é em {ano_alistamento}')

# se a idade for igual a 18 anos informa que deve se alisatar 
 else:
  print('Você está no prazo de alistamento, procure uma unidade militar mais próxima e evite penalidades!')

#40 calcue a média e mostre aprovado, em recuperação e reprovado

mes = '\033[36mCácluo de Média do aluno'
larg = 130
print('\033[1;33;42m=-=' * 20 + 'Bem vindo' + '=-=' * 20 + '\033[0m')
print(mes.center(larg))
print('\033[33;42m' + '=-=' * 20 + '=-=' * 23 + '\033[0m')

nota1 = float(input('Digite a primeira nota do Aluno: \n'))

nota2 = float(input('Digite a  segunda nota do Aluno: \n'))

media = (nota1 + nota2) / 2

if media >= 7.0:
  print(f'\033[32mAluno aprovado! com média  {media:.2f}')

elif media >= 5.0 and media <= 6.9:
  print(f'\033[33mAluno está em recuperação com média  {media:.2f}')

else:
  print(f'\033[31mAluno está reprovado! com média  {media:.2f}')

#41 ler uma data de nascimento e mostrar a categoria dela de acordo com a idade

#importando a biblioteca datetime para calcular a idade aatual
import datetime

#Inserindo o nome da pessoas a ser analisado
nome = str(input('Digite o nome da Pessoa: '))

#pegando a data de nascimeto da pessoa
nascimento = int(input('Digite seu ano de Nascimento com 4 dígitos: '))

#verificando a idade atual da pessoa
idade = date.today().year - nascimento

#Fazendo a verificação das categorias de acordo com a idade

if idade <= 9 :
  print(f'{nome} você pertence a categoria MIRIM'),

elif idade > 9 and idade <= 14:
  print(f'{nome} Você pertence a categoria INFANTIL')  

elif idade > 14 and idade <= 19:
  print(f'{nome} você pertence a categoria JÚNIOR') 

elif idade == 20:
  print(f'{nome} Você pertence a categoria SÊNIOR')

else:
  print(f'{nome} você pertence a categoria MASTER')

                 ##FIM##

#42 Verificando se é possivel construir um triângulo e se for qual seria o triângulo
!pip install colorama
import matplotlib.pyplot as plt
from time import sleep
import colorama
from colorama import Fore

a = float(input('Digite uma valor para a primeira reta : '))
b = float(input('Digite uma valor para a segunda reta : '))
c = float(input('Digite uma valor para a terceira reta : '))

if a < b + c and b < a + c and c < a + b:
  # Calcula as coordenadas dos três vértices do triângulo
  x1, y1 = 0, 0
  x2, y2 = c, 0
  x3 = (a**2 - b**2 + c**2) / (2 * c)
  y3 = (a**2 - x3**2)**0.5

  # Plota o triângulo
  plt.plot([x1, x2, x3, x1], [y1, y2, y3, y1])


  print('Processando...')
  sleep(2)

  if a == b == c:
   print('Triângulo equilátero')
   print('Processando...')
   sleep(2)
   plt.show()

  elif a == b and a != c or a == c and a != b or b == c and b != a:
   print('Triângulo isosceles')  
   print('Processando...')
   sleep(2)
   plt.show()

  else:
   print('Triangulo escaleno')
   print('Processando...')
   sleep(2)
   plt.show()  

#print('Podemos formar um triangulo ')
#plt.show()

else:
 print(Fore.RED + 'Não é possivel fazer um \u25B2' + Fore.RESET)

#43 IMC
peso = int(input('Digite seu peso: '))
altura = float(input('Digite sua altura: '))
alt = pow(altura,2)
#mc = peso/alt
#print(mc)
IMC = peso / alt #(altura * altura)


if IMC < 18.5:
  print(f'\033[33mSeu índice de Massa Corporal é de: {IMC:.2f} você está abaixo do Peso Ideal ')

elif IMC >= 18.5 and IMC <= 25:
  print(f'\033[34mSeu índice de Massa Corporal é de: {IMC:.2f} você está no Peso Ideal ')

elif IMC > 25 and IMC <= 30:
  print(f'\033[35mSeu índice de Massa Corporal é de: {IMC:.2f} você está com sobrePeso ')

elif IMC > 30 and IMC <= 40:
  print(f'\033[32mSeu índice de Massa Corporal é de: {IMC:.2f} você está Obeso ') 

else :
  print(f'\033[33mSeu índice de Massa Corporal é de: {IMC:.2f} você está com obesidade morbida \U0001F480')

#44 Calculando valor a ser pago

valor_normal = float(input('Digite o valor do produto R$'))
op = int(input('''Escolha a Forma de Pagamento: 
[1] Á vista ou Cheque
[2] Á vista no cartão
[3] Até 2x no cartão
[4] 3x ou mais parcelas\n''' ))

if op == 1:
  dez = ((valor_normal /100)*10)
  desconto = valor_normal - ((valor_normal /100)*10)
  print(f'Valor a Pagar R${desconto:.2f}\no valor do desconto foi de R${dez:.2f}')

elif op == 2:
    cinco = ((valor_normal /100)*5)
    desconto = valor_normal - ((valor_normal /100)*5)
    print(f'Valor a Pagar R${desconto:.2f}\n o valor do desconto foi de R${cinco:.2f}')

elif op == 3:
    p = valor_normal / 2
    print(f'O valor a pagar R${valor_normal:.2f}\n em 2 parcelas de R${p:.2f}')

elif op == 4:
  j = valor_normal + (valor_normal *20 / 100)
  qtd_parcelas = int(input('Informe o Número de Parcelas a partir de 3x '))
  valor_parcelas = j / qtd_parcelas
  print(f'O valor a pagar R${j:.2f} com juros em {qtd_parcelas}X de {valor_parcelas:.2f}')

else:
  print('Opção Inválida!')

import random
from time import sleep
opçoes = ['Pedra', 'Papel','Tesoura']

op = str(input('''Digite:
Pedra
Papel
Tesoura \n\n''')).upper()

maquina = random.choice(opçoes).upper()
print('-==-'*40)
print('JO')
sleep(1)
print('KEN')
sleep(1)
print('PO')
sleep(1)
print('-==-'*40)

print(f"Você escolheu: {op}")
print(f"O computador escolheu: {maquina}")
print('-==-'*40)
if op == 'PEDRA' and maquina == 'TESOURA' or op == 'PAPEL' and maquina == 'PEDRA' or op == 'TESOURA' and maquina == 'PAPEL' :
  print('Parabéns você Ganhou')

elif op == 'PEDRA' and maquina == 'PAPEL' or op == 'PAPEL' and maquina == 'TESOURA' or op == 'TESOURA' and maquina == 'PEDRA':
  print('Infelizmente você Perdeu ')

elif op == maquina:
  print('Houve um empate!') 

else:
  print('Opção inválida')

for i in range(0,22,2+2):
  print(i)

import random
from time import sleep

print(10*'-==-==','Bem vindo ao jogo de advinhação','-==-=='*10)
sleep(2)

while True:
 
 print('Pensei em número tente advinhar!!!')
 pc = random.randint(0,10)
 sleep(2)
 
 try:
        numero = int(input('Digite um número de 0 a 10: '))
 except ValueError:
        print('Digite apenas números de 0 a 10.')
        continue

 print('Analisando número digitado AGUARDE!')
 sleep(2)

 if numero == pc:
  print(f'\033[32mParabéns você venceu! o número que pensei foi {pc}')
 else:
  print(f'\033[33mvocê perdeu,o número que pensei foi {pc} tente de novo') 

  op = str(input('Deseja tentar novamente?\n S - SIM === N - NÃO\n ')).upper()
  if op == 'S' or op == 'SIM':
    print('Recomeçando....')
    sleep(2)
  else:
    print('FIM DO JOGO')
    break

#46 Faça um programa que mostre na tela uma contagem regressiva 
#para o estouro de fogos de artifício, indo de 10 até 0, com uma pausa de 1 segundo entre eles.
from time import sleep
for c in range(10,-1,-1):
  print(c)
  sleep(1)
print('-=-==-= FOGOS ESTOURADOS!!!\U0001F386 -=-==-=')
sleep(1)

#sorteando 6 numeros entre 1 e 60
import random
from time import sleep
lista = []
for a in range(6):
  n =  random.randint(1, 60) #input('Digite um nome ') #int(input('digite um numero ')) 
  lista.append(n)
for n in  lista: #range(100):
 #print(n, end=' ') 
 #print(n, end=' ')
 #print(n)
 #print(n, end=' ')
 print(n, end=' ')
 sleep(1)
#s = random.randint(lista)

#Testando um print de load
from time import sleep
for a in range(6):
  print('.', end='' )
  #print('Parabéns', end= ' ')
  sleep(1)

#47 Mostrar todos os números pares entre 1 e 50
from time import sleep
for c in range (2,51,2):
  sleep(1)
  print(c, end = " - ")

#48 Soma de todos os numeros impares entre 1 e 500
soma = 0
cont = 0
for c in range (1,501,2):
  #SOMENTE NUMROS ÍMPARES
  #if c % 2 !=0:
   #print(c, end = " - ")
  if c % 3 ==0:
   #print(f'Os números multiplos de 3 são: {c}')
   soma +=  c
   cont += 1
print(f'A soma dos {cont} números multiplos de 3 é de: {soma}')

for c in range(1,501,2):
  if c % 3 == 0:
     print(c, end = ' ')

#49
print('Bem vindo a tabuada de um número digitado')
n = int(input('Digite um número: '))
for i in range(1, 11):
    print(f'{n} x {i} = {n*i}')

#50 Desenvolva um programa que leia seis 
#números inteiros e mostre a soma apenas daqueles que forem pares. Se o valor digitado for ímpar, desconsidere-o.


n = []
soma = 0
cont = 0
print('Digite seis números inteiros: ')
for c in range(1,7):
 n = int(input((f'Digite o {c}º valor: ')))
 if n %2 == 0 :
  soma += n
  cont += 1
print(f'A soma dos numeros pares é: {soma} e existem {cont} numeros pares')

#51 Desenvolva um programa que leia o primeiro termo e a razão de uma PA. No final, mostre os 10 primeiros termos dessa progressão.
a1 = int(input('Digite um termo: '))
r = int(input('Digite a razão: '))
for c in range(1,11):
  an = a1 + (c - 1) * r
  print(an, end = " ")

#52 Faça um programa que leia um número inteiro e diga se ele é ou não um número primo.
n = int(input('Digite um numero : '))
tot=0
for c in range(1,n+1):
  if n % c == 0:
      print('\33[34m', end =' ')
      tot += 1
  else:
      print('\33[33m', end = ' ') 
  print(f'{c}', end = ' ')    
print(f'\n\033[m O numero {n} foi divisivel {tot} vezes', end = ' ') 

if tot == 2:
  print('O número é primo')
else:
  print('O número não é primo')

# versão avançada Faça um programa que leia um número inteiro e diga se ele é ou não um número primo.

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5)+1):
        if n % i == 0:
            return False
    return True

n = int(input('Digite um número: '))
if is_prime(n):
    print(f"{n} é primo.")
else:
    print(f"{n} não é primo.")

#53 Crie um programa que leia uma frase qualquer e diga se ela é um palíndromo, desconsiderando os espaços.
frase = str(input('Digite uma frase e vamos ver se ela é um PALINDRO: ')).strip().upper()
palavra = frase.split()
junto = ''.join(palavra)
inverso = junto[::-1]
#for letra in range (len(junto) - 1, -1, -1):
 #  inverso += junto[letra]

#palavra_reversa = palavra[::-1]
if inverso == junto:
  print(f'{inverso} é um palindro')
else:
  print('Não é palindro')

#54 ler 7 idades e diga quantas já são maiores de idade e quantas não são
import datetime
from datetime import date
nascimento = []
tot = 0
tot2 = 0
for i in range (1,8):
  nascimento = int(input(f'Digite o {i}º ano de nascimento: '))
  idade = date.today().year - nascimento
  if idade >= 21:
    tot += 1
  else:
    tot2 += 1


print(f'Temos {tot2} pessoas menores de idade é {tot} pessoas maiores de idade')

#55 leia peso de 5 pessoas e diga o maior peso e o menor peso
pesos = []
cont = 0
cont2 = 0
for i in range (1,6):
  peso = float(input(f'Digite o {i} peso: '))
  pesos.append(peso) 
  menor_peso = min(pesos)
  maior_peso = max(pesos)
  #if menor_peso < maior_peso:
    #cont += 1
  #print(_'Menor peso {menor_peso}')
  #else:
    #cont2 += 1
  #print(f'O maior peso é {maior_peso}')  
print(f'O menor peso lido foi {menor_peso}Kg e o maior peso lido foi {maior_peso}Kg')

#56 Leia nome idade e sexo de 4 pessoas e mostre a idade media do grupo, o nome do homen mais velho e quantas mulheres tem mais de 20 anos

somaidade = 0
mediaidade = 0
maior_idade_homen = 0
nome_do_homen_mais_velho ='Não existe Homens nesta lista '
tot20 = 0

print('-----= Bem vindo ao cadastro de passageiros =-----\n')
opcao = int(input(' -==-==- Digite quantas pessoas serão cadastradas:   -==-==-  \n'))



for i in range (opcao):

   print(f'------{i+1}ª Pessoa------\n') #coletando os dados

   nome = str(input('Nome: ')).strip()
   sexo = str(input('Sexo M/F: ')).strip()
   idade = int(input('Idade: '))

   somaidade += idade #soma todas as idades digitadas

   if i == 1 and sexo in 'Mm':
      maior_idade_homen = idade
      nome_do_homen_mais_velho = nome

   elif  sexo in 'Mm' and idade >  maior_idade_homen:
      maior_idade_homen = idade
      nome_do_homen_mais_velho = nome

   elif sexo in 'Ff' and idade < 20:
      tot20 += 1    
   else:
    print('Opção inválida, volte ao menun inicial')
  


mediaidade = somaidade/opcao

print(f'A média de idade do grupo é de : {mediaidade:.2f} anos')
print(f'O homen mais velho tem {maior_idade_homen} anos e se chama {nome_do_homen_mais_velho}')
print(f'Exitem {tot20} Mulheres menores de 20 anos')

#57 leia o sexo e só aceite F ou M se estiver errado pergunte de novo

while True:
  sexo = str(input('Digite o sexo: F ou M ')).strip().upper() [0]

  if sexo == 'M' or sexo == 'F':
    print('Sexo inserido com sucesso')
    break
     
  else:
    print('Digite o sexo novamente, sexo inválido ')
    continue

#57 alternativa sem if else
sexo = str(input('Digite o sexo: F ou M ')).strip().upper() [0]
while sexo not in  'MmFf':
  sexo = str(input('Digite o sexo novamente: F ou M ')).strip().upper() [0]

print('Sexo inserido com sucesso')

#58 Avaliando numero

import random
from time import sleep
print('- \u2620 -'*20)
print('Pensei em um número: ? ')
print('- \u2620 -'*20)

sorteio = random.randint(0,10)

cont = 0
while True:
  n = int(input('Digite um numero entre 0 e 10 e veja se voce advinhou o numero que pensei: '))
  print('Processando...')
  sleep(2)
  cont += 1
  if n == sorteio:
     print('Parabéns você acertou \U0001F973!!')
     break
  else:
     print(f'Não foi dessa vez ótario \U0001F921!') 
     continue
     
print(f'Voce tentou acertar {cont} vezes')

,#59 menu de calculos
from time import sleep

print(5*'-=-','Menu de Opçõea ', '-=-'*5)

print('Digites dois valores abaixo: ')
sleep(1)
numero1 = int(input('Digite um valor\n '))
sleep(1)
print('Número digitado com sucesso...')
sleep(1)
numero2 = int(input('Digite outro valor\n '))
sleep(1)
print('Número digitado com sucesso...')
sleep(1)
print('Processando informações, abrindo Menu de Opções')
sleep(2)

while True:

  op = int(input('Menu de Opções:\n 1 -Somar\n 2 - Multiplica\n 3 - Maior Numero\n 4 - Outros valores \n5 - Sair\n '))
  print('Processando informações aguarde')
  sleep(2)

  if op == 1:
     somar = numero1 + numero2
     print('calculando soma')
     sleep(1)
     print(f'A soma foi de: {somar}')
     continue

  elif op == 2:
     mult = numero1 * numero2
     print('calculando a Multiplicação')
     sleep(1)
     print(f'A multiplicação é: {mult}')
     continue

  elif op == 3:
    if numero1 == numero2:
      print('Verificando números digitados aguarde...')
      sleep(1)
      print('Os números são iguais')
      continue
    num = max(numero1,numero2)
    print('Verificando o maior número digitado aguarde...')
    sleep(1)
    print(f'O maior número é: {num}')
    continue

  elif op ==  4: 
      print('Digite novos valores: ')
      sleep(1)
      numero1 = int(input('Digite um valor novamente '))
      numero2 = int(input('Digite outro valor novamente '))
      print('Processando dados aguarde...')
      sleep(1)
      continue

  elif op ==  5:
      print('Saindo do programa,obrigado por usar nosso sistema')
      break 

  else:
      print('Opção inválida, tente novamente')
      sleep(1)
      continue

#60 fatorial WHILE

n = int(input('Digite um valor para calcular o fatorial '))
c = n
fat = 1
print(f'Calculando Fatorial {n}! = ', end='')
while c > 0:
  print(f'{c}', end='')
  print(f' X ' if c > 1 else ' = ', end='')
  fat *= c
  c -= 1
print(f'{fat}')

#fatorial opção 2 FUNCTION 
from  math import factorial
f = 0
n = int(input('Digite um número e veja seu fatorial: '))
f = factorial(n)
print(f'O fatorial de {n} é: {f}')

#fatorial opção 3 FOR

n = int(input('Digite um número e veja seu fatorial: \n'))
f = 1
for i in range(1, n+1):
    print(f'{i}', end='')
    if i < n:
        print(' X ', end='')
    else:
        print(' = ', end='')
    f *= i
print(f)

#61 calculando PA com WHILE

termo = int(input('Digite um termo: '))
razao = int(input('Digite a razão: '))
c = 1 
while c <= 10 :
  print(termo, end = " ")
  termo += razao
  c += 1

#62 quantos termos usuario quer ver

c = 1 
termo = int(input('Digite um termo: '))
razao = int(input('Digite a razão: '))
termos = int(input('Digite quantos termos voce quer ver: '))


while c <= termos :
  print(termo, end = " ")
  termo = razao + termo
  c += 1

#62 quantos termos usuario quer ver versao 2.0

termo = int(input('Digite o termo da PA: '))
razao = int(input('Digite a razão da PA: '))
quantos_termos = int(input('Digite quantos termos que ver: '))
cont = 1
#termo = primeiro
while cont <= quantos_termos:
  print(termo,f' -> ', end='')
  termo = razao+termo
  cont += 1
print('FIM', end='')

#62 quantos termos usuario quer ver adcionando mais numeros depois

c = 1 
a1 = int(input('Digite um termo: '))
r = int(input('Digite a razão: '))
termos = int(input('Digite quantos termos voce quer ver: '))
lista = []

while c <= termos :
  if r == 0 :
    print('Não podemos adcionar 0 a razão, digite novamente: ')
    continue
  an = (a1 + ((c - 1)* r))
  c += 1
  lista.append(an)
print(f'Os {termos} primeiros termos são {lista}')   

while True:
  opcao = int(input('Digite 1 - para adcionar mais termos\n 2 - Sair \n'))

  if opcao == 1:
     novos_termos = int(input('Digite quantos termos voce quer ver a mais: '))
     for i in range(1, novos_termos+1):
         an = (a1 + ((c - 1)* r))
         c += 1
         lista.append(an)
         continue
  elif opcao == 2:
     print(f'Os a lista final de termos é: {lista}', end = " ")
     break
  else:
     print('Opção inválida digite novamente ')
     continue

#62 quantos termos usuario quer ver adcionando mais numeros depois V 2.0

c = 1 
total = 0
lista = []

termo = int(input('Digite um termo:\n '))
razao = int(input('Digite a razão:\n '))
mais = int(input('Quantos termos?\n ')) 

while mais != 0 :
  total += mais
  while c <= total:
    lista.append(termo)
    print(termo,' -> ', end = " ")
    termo += razao
    c += 1
  print('PAUSA')
  mais = int(input('Quantos termos a mais?\n '))  
print(f'O total de termos é: {total} termos, com a seguinte lista:  {lista} -> FIM')

n = 2
lista = [0, '->'  ,1]

print(lista)

#63 fibonacci
n = int(input('Quantos termos você quer mostrar? '))
t1 = 0
t2 = 1
cont = 3
print(f'{t1} -> {t2}', end='')
while cont <= n:
  t3 = t1 + t2
  print(f' -> {t3}', end='')
  t1 = t2
  t2 = t3
  cont += 1

#63 Definindo a quantidade de números a serem gerados
n = int(input('Quantos termos quer exibir: '))

# Inicializando as variáveis com os dois primeiros números da sequência
a = 0
b = 1


# Loop para gerar os próximos números da sequência
for i in range(n):
    print(a, end=' ')
    a, b = b, a + b

#63 fibonacci
t1 = 0
t2 = 1
t3 = t1+t2
lista  = [t1,t2]
cont = 3
n = int(10)
while cont <= n:
  t3 = t1+t2  
  cont += 1
  t1 = t2
  t2 = t3
  lista.append(t3)
print(lista)

#64 Números primos

num = int(input("Digite um número: "))

# Verifica se o número é primo
primo = True
for i in range(2, num):
    if num % i == 0:
        primo = False
        break

# Exibe o resultado
if primo:
    print(num, "é um número primo")
else:
    print(num, "não é um número primo")

#63 fiboncci
#Fn = Fn - 1 + Fn - 2
n = int(input('Digite n '))
#for i in range(5):
 # fn = n + (n - 1)
 # print(fn)

lista = [0,1]
c = 0
while lista[-1] <= n :
    lista.append(lista[-1] + lista[-2])
    c += 1
print(lista)

#64/65 Crie um programa que leia vários números inteiros pelo teclado. 
#O programa só vai parar quando o usuário digitar o valor 999, que é a condição de parada. No final, mostre
#quantos números foram digitados e qual foi a soma entre eles (desconsiderando o flag).

n = int(input('Digite um valor: '))
numeros = [n]

while n != 999:
  n = int(input('Digite um valor: '))
  if n == 999:
    break 
  elif n > 999:
    print('Este valor é proíbido')
    continue 
  numeros.append(n)
    
soma = sum(numeros)
media = soma / len(numeros)
maior = max(numeros)
menor = min(numeros)
print(f'A soma dos valores digitados é: {soma} e a média é {media} com o maior valor de {maior} e o menor valor é {menor} com a lista de valores {numeros}')

#64 Crie um programa que leia vários números inteiros pelo teclado. 
#O programa só vai parar quando o usuário digitar o valor 999, que é a condição de parada. No final, mostre
#quantos números foram digitados e qual foi a soma entre eles (desconsiderando o flag).
n = cont = soma =0
n = int(input('Digite um número ou 999 para sair: \n'))
while n != 999:
  soma += n
  cont += 1
  n = int(input('Digite um número ou 999 para sair: \n'))
print(f'A soma é {soma} e tem {cont} digitos')

#65 Crie um programa que leia vários números inteiros pelo teclado. No final da execução, mostre a média entre todos os valores e qual foi o maior 
#e o menor valores lidos. O programa deve perguntar ao usuário se ele quer ou não continuar a digitar valores.

numeros = []
c=0
while True:
  op = int(input('Bem vindo, Digite 1 - Sair ou 2 - Continuar '))
  if op == 2:
    lista = int(input('Digite um valor: '))
    numeros.append(lista)
    c+=1
    continue
  elif op == 1:
    print('Saindo do sistema')
    break
  else:
    print('Número ou opção inválida')
    continue 

soma = sum(numeros)
media = soma/len(numeros)   
maior = max(numeros)
menor = min(numeros)  

print(soma, media, maior, menor)

#66 Crie um programa que leia números inteiros pelo teclado. O programa só vai parar quando o 
#usuário digitar o valor 999, que é a condição de parada. No final,
# mostre quantos números foram digitados e qual foi a soma entre elas (desconsiderando o flag).

numeros=cont = soma = 0
while True:
  numeros = int(input('Digite um numero ou 999 para sair: '))

  if numeros == 999:
    print('saindo do programa')
    break

  soma += numeros
  cont += 1
print(f'A soma dos {cont} números digitados é {soma}')

#67: Faça um programa que mostre a tabuada de vários números, um de cada vez, 
#para cada valor digitado pelo usuário. O programa será interrompido quando o número solicitado for negativo.
from time import sleep
n = cont = 0

while True:
  n = int(input('Digite um número e veja a tabuada dele: '))

  if n <= 0:
    print('Número negativo ou zero valor, saindo do programa')
    break
    3
  for i in range(1, 11):
    print(f'{n} x {i} = {n*i}')  
    sleep(1)

#68: Faça um programa que jogue par ou ímpar com o computador. O jogo só será interrompido quando 
#o jogador perder, mostrando o total de vitórias consecutivas que ele conquistou no final do jogo.
# acertar a soma dos numeros se é par ou impar
from random import randint
v = 0
while True:
  jogador = int(input('Digite um numero de 0 a 10: '))
  computador = randint(0,10)
  total = computador + jogador
  tipo = ' '
  tipo = str(input('Digite PAR ou IMPAR para o resultado\n')).upper().strip() [0]
  if tipo == 'PAR' and total % 2 == 0:
    #if total % 2 ==0:
      print('Você venceu')
      v += 1
      print(f'Você escolheu {tipo} e Você venceu: {v} vezes,Você jogou: {jogador}, o Coputador jogou: {computador}, a soma dos valores é de: {total}')
  elif tipo == 'IMPAR' and total % 2 == 1:
    print('Você venceu!!')
    v+=1  
    print(f'Você escolheu {tipo} e Você venceu: {v} vezes,Você jogou: {jogador}, o Coputador jogou: {computador}, a soma dos valores é de: {total}')
  else:
    print(f'Você perdeu! Resultado {total}')
    break

  print('Vamos jogar novamente....')

#69 Crie um programa que leia a idade e o sexo de várias pessoas. 
#A cada pessoa cadastrada, o programa deverá perguntar se o usuário quer ou não continuar. No final, mostre:

#A) quantas pessoas tem mais de 18 anos.

#B) quantos homens foram cadastrados.

#C) quantas mulheres tem menos de 20 anos.

idade = 0
tot20 = 0
contM = 0
contF = 0
contIdade = 0
print('-----= Bem vindo ao cadastro de pessoas =-----\n')

while True:

  idade = int(input(' -==-==- Digite a idade:   -==-==-  \n'))
  if idade > 18:
    contIdade += 1
       
  sexo = ' ' 
  while sexo not in 'FM':
    sexo = str(input('   -==-==-  Digite o sexo [M/F]:   -==-==-   \n')).upper().strip()[0]

  if sexo == 'M':
    contM += 1
    

  elif sexo == 'F':
    if idade < 20 :
      tot20 += 1

  op = ' '
  while op not in 'SN': 
    op = str(input('Deseja cadastrar mais uma pessoa? [S/N]: ')).upper().strip()[0]

  if op == 'S':
     continue

  elif op == 'N':
     print('Saindo do programa...\n')
     break

print(f'O total de pessoas maiores de 18 é de: {contIdade}\n')
print(f'O total de homens cadastrados é de: {contM}\n')
print(f'Exitem {tot20} Mulheres menores de 20 anos')

#70: Crie um programa que leia o nome e o preço de vários produtos. 
#O programa deverá perguntar se o usuário vai continuar ou não. No final, mostre:

#A) qual é o total gasto na compra.

#B) quantos produtos custam mais de R$1000.

#C) qual é o nome do produto mais barato.

soma = 0
listaPreco = []
listaProduto = []
while True:
  produto = str(input('Digite o nome do produto:\n'))
  listaProduto.append(produto)

  preco = float(input('Digite o preço do Produto R$: \n'))
  listaPreco.append(preco)

  

  menor_preco = listaPreco.index(min(listaPreco))
  nome_produto_mais_barato = listaProduto[menor_preco]


  op=' '
  op = str(input('Deseja continuar [S/N]: \n')).upper().strip()[0]
           
  if op == 'S':
     continue

  if op == 'N':
    print('{:-^40}'.format ('Saindo do Programa'))
    break 

cont_maior_1000 = 0
for preco in listaPreco:
    if preco > 1000:
        cont_maior_1000 += 1

soma = sum(listaPreco)
print(f'Os produtodos cadastrados são: {listaProduto} \ncom valores de R$ {listaPreco}, \nsoma dos valores e de R${soma:.2f}')
print(f'O produto mais barato é "{nome_produto_mais_barato}" com preço de R$ {min(listaPreco):.2f}')
print(f'{cont_maior_1000} produtos têm preço maior que R$ 1000')

#71 simulando um caixa eletronico
cedulas = [100, 50, 20, 10, 5, 1]

while True:
    valor = int(input("Digite o valor a ser sacado: "))

    for cedula in cedulas:
        quantidade = valor // cedula
        if quantidade > 0:
            valor -= quantidade * cedula
            print(f"{quantidade} cédula(s) de R${cedula}")

        if valor == 0:
            break

    op = int(input('Deseja fazer outro Saque? DIGITE [1] para SIM ou [2] para NÃO\n'))
    
    if op == 1:
        continue

    elif op == 2:
        print('Obrigado por usar o Banco Becker')
        break

    else:
        print('opção inválida')
        continue

!pip install hashlib

#criptografia de senha  usandl sal e SHA256

import hashlib
import os

# Gera um salt aleatório
salt = os.urandom(128)

senha = input("Digite a senha a ser criptografada: ")

# Concatena o salt com a senha
senha_com_salt = salt + senha.encode()

# Criptografa a senha com o salt usando o algoritmo SHA-256
senha_criptografada = hashlib.sha256(senha_com_salt).hexdigest()

print("A senha criptografada é:", senha_criptografada)

from IPython.display import Image
try:
  filename = take_photo()
  print('Saved to {}'.format(filename))
  
  # Show the image which was just taken.
  display(Image(filename))
except Exception as err:
  # Errors will be thrown if the user does not have a webcam or if they do not
  # grant the page permission to access it.
  print(str(err))

#dicionario,lista e tuplas
#Essas linhas criam uma lista vazia, uma tupla vazia e um dicionário vazio, respectivamente.
#Lista list=[]
#Tupla tupla=()
#Dicionario dic={}

'''pessoa = {'Nome':['Davi','Maria'],'Altura':['1.76m','2.10'],'Sexo':['Masculino','Feminino']}
print(pessoa['Nome'])
print(pessoa['Altura'])
print('Nome:',pessoa['Nome'][0],'Altura:',pessoa['Altura'][0],'Sexo:',pessoa['Sexo'][0])
print(pessoa)'''

pessoas = {}

while True:
    nome = str(input('Digite o Nome: (Ou sair para sair\n)')).upper().strip()
    if nome == 'SAIR':
      break
    idade = int(input('Digite a idade:\n '))
    sexo = str(input('Digite o Sexo: \n'))

    pessoa ={'Nome': nome, 'Sexo': sexo, 'Idade': idade}
    pessoas[nome] = pessoa
for nome, pessoa in pessoas.items():
  print(f'Nome: {pessoa["Nome"]}, Sexo: {pessoa["Sexo"]}, Idade: {pessoa["Idade"]}')

comedies = ("Arrested Development", "How I Met Your Mother", "Always Sunny")
for show in comedies:
    print(show)

#MEU PRÒPIO TRADUTOR
#!pip install translate
from translate import Translator

translator = Translator(from_lang ='pt', to_lang ='en')

palavra = str(input('Digite uma palavra:' ))

traducao = translator.translate(palavra)


print(f'A palavra:  {palavra}   traduzida é: {traducao}')

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount('/gdrive')
# %cd /gdrive

class Animal:
    def __init__(self, nome, idade):
        self.nome = nome
        self.idade = idade

    def fazerSom(self):
        pass


class Gato(Animal):
  def __init__(self, nome):
        self.nome = nome

  def fazerSom(self):
    return 'mia'

class Cachorro(Animal):
  def __init__(self, nome):
        self.nome = nome
  def fazerSom(self):
    return 'late'        

gato = Gato('Mimi')
print(gato.fazerSom()) # output: mia

dog = Cachorro('Caramelo')
print(dog.fazerSom()) # output: late

import IPython
js_code = '''
document.querySelector("#output-area").appendChild(document.createTextNode("hello world!"));
'''
display(IPython.display.Javascript(js_code))

letras = ['a','b','c']
numero = [1,2,3]
juntos = letras + numeros
for i in range(0,3):
  juntos1 = ''.join(letras)
  i =+ 1
  print(juntos1,'->', end='')
  #print(juntos)
print('FIM', end='')

c =1
lista = []
valor = ''

while c != 'SAIR':
  
  valor = str(input('Digite um valor ou SAIR para sair ')).upper().strip()
  if valor == 'SAIR':
     break
  c += 1 
 
  lista.append(valor)
c = c - 1     
print(f'A lista é {lista} e tem {c} Elementos')
print('FIM')

#cofre

from time import sleep

moedas = []
moeda = 0
quantidade_reais = 0
quantidade_dolares = 0
quantidade_euros = 0
valor_total = 0
converterDolarEmReal = 0
converterEuroEmReal = 0
moeda_converter = 0
op_convercao = 0

quantidade_moedas = int(input('Quantas moedas você quer adicionar?: '))

for c in range(quantidade_moedas):
   opcao = int(input('Escolha a Moeda:\n1 - Real\n2 - Dolar\n3 - Euro\n'))

   if opcao == 1:
    moeda = 'Real'

   elif opcao == 2:
    moeda = 'Dolar'
 
   elif opcao == 3:
    moeda = 'Euro'
   
   else:
    print('Opção inválida!')
    continue;

   valor = float(input(f'Digite o valor da moeda de {moeda}: '))

   nova_moeda = {'moeda': moeda, 'valor': valor}
   
   moedas.append(nova_moeda)
   valor_total = valor_total + valor

#print(f'{moeda} {valor} adicionado com sucesso à lista de moedas!')

for moeda in moedas:
    if moeda['moeda'] == 'Real':
        quantidade_reais += 1

    elif moeda['moeda'] == 'Dolar':
        quantidade_dolares += 1
        

    elif moeda['moeda'] == 'Euro':
        quantidade_euros += 1
        

        op_convercao = int(input('Deseja converter a moeda em real?  1 - Sim  2 - Não == '))
        print('Processando opção de convesão....')
        sleep(2)
    while op_convercao == 1:
        #if op_convercao == 1:
                moeda_converter = int(input('Qual moeda deseja converter 1 - Dolar 2 - Euro  3 - Sair'))
                print('Aguarde Processando...')
                sleep(2);

                if moeda_converter == 1:
                         print(f'Convertendo moeda....')
                         sleep(2)
                         converterDolarEmReal = moeda['valor']  * 5.25
                         print(f'Moeda Convertida {moeda["valor"]}')

                elif moeda_converter== 2:
                         print(f'Convertendo moeda....')
                         sleep(2)
                         converterEuroEmReal = moeda['valor'] * 5.35
                         print(f'Moeda Convertida {moeda["valor"]}')

                elif moeda_converter== 3:
                         print(f'Saindo....')
                         sleep(2)
                         continue
                else:
                  print('Opção Inválida')
                  sleep(2)
                  print('Voltando Menu')
                  continue;

                  op_convercao = input('Deseja converter outra moeda em real? Digite Sim  OU  Não ').upper
                  print('Processando requisção, aguarde!...')
                  sleep(2)


   # else:
     # print('Voltando para o Menu')
     # continue;


print(f'''Foram adcionadas {quantidade_moedas} Moedas,
{quantidade_reais} de Reais - {quantidade_dolares} de Dolar -]
{quantidade_euros} de Euro\n o Valor Total foi de {valor_total} Dolar Convertido {converterDolarEmReal} e Euro Convertido {converterEuroEmReal}''')
       




#print(f'''Foram adcionadas {quantidade_moedas} Moedas,
#{quantidade_reais} de Reais - {quantidade_dolares} de Dolar -]
#{quantidade_euros} de Euro\n o Valor Total foi de {valor_total} Dolar Convertido {converterDolarEmReal} e Euro Convertido {converterEuroEmReal}''')

#cofre
moedas = []
moeda = 0
quantidade_reais = 0
quantidade_dolares = 0
quantidade_euros = 0
valor_total = 0
converterDolarEmReal = 0
converterEuroEmReal = 0
moeda_converter = 0
op_convercao = ' '

quantidade_moedas = int(input('Quantas moedas você quer adicionar?: '))

for c in range(quantidade_moedas):
    opcao = int(input('Escolha a Moeda:\n1 - Real\n2 - Dolar\n3 - Euro\n'))

    if opcao == 1:
        moeda = 'Real'
    elif opcao == 2:
        moeda = 'Dolar'
    elif opcao == 3:
        moeda = 'Euro'
    else:
        print('Opção inválida!')

    valor = float(input(f'Digite o valor da moeda de {moeda}: '))

    nova_moeda = {'moeda': moeda, 'valor': valor}

    moedas.append(nova_moeda)
    valor_total = valor_total + valor

#print(f'{moeda} {valor} adicionado com sucesso à lista de moedas!')

for moeda in moedas:
    if moeda['moeda'] == 'Real':
        quantidade_reais += 1
    elif moeda['moeda'] == 'Dolar':
        quantidade_dolares += 1
    elif moeda['moeda'] == 'Euro':
        quantidade_euros += 1

    op_convercao = input('Deseja converter um moeda em real?Digite  Sim ou Não  ').upper()
    while op_convercao == 'SIM':
        moeda_converter = input('Qual moeda deseja converter? Dolar , Euro?  Ou Digite Sair para sair').upper()

        if moeda_converter == 'DOLAR':
            converterDolarEmReal = moeda['valor'] * 5.25
            print('Convertendo valores, aguarde...')
            sleep(2)
            print(f'Moeda de US$ {moeda["valor"]} Convertida com sucesso ')

        elif moeda_converter == 'EURO':
            converterEuroEmReal = moeda['valor'] * 5.35
            print('Convertendo valores, aguarde...')
            sleep(2)
            print(f'Moeda de € {moeda["valor"]} Convertida com sucesso ')

        elif moeda_converter == 'SAIR':

          print('Inciando Menu....')
          sleep(2)
          continue

        else:
            print('Opção Inválida')
            continue

        op_convercao = input('Deseja converter outra moeda em real? Digite Sim  OU  Não ').upper
        print('Processando requisção, aguarde!...')
        sleep(2)

print(f'''Foram adicionadas {quantidade_moedas} Moedas\n,
{quantidade_reais} de Reais - {quantidade_dolares} de Dolar\n -
{quantidade_euros} de Euro.
O Valor Total depositado foi de {valor_total}\n - O Valor do Dolar Convertido US$,{converterDolarEmReal:.2f}\n e o valor do Euro Convertido €{converterEuroEmReal:.2f}''')

(( 10 / 2  ) > 5 ) or not ( 3 < 2 )

numbers = [1, 2, 3, 4, 5]
for num in numbers:
  if num == 3:
   continue
   print(num)
  else:
   print("Done")

!pip install scapy

from scapy.all import *

def packet_callback(packet):
    print(packet.summary())

def packet_callback(packet):
    src_ip = packet[IP].src
    dst_ip = packet[IP].dst
    print(f"Source IP: {src_ip}, Destination IP: {dst_ip}")    

sniff(prn=packet_callback, count=10)

print("+" + 10 * "-" + "+")
print(("|" + " " * 10 + "|\n") * 5, end="")
print("+" + 10 * "-" + "+")

import pprint



nums = {4: 1, 3: 2, 1: 1, 2: 3}



pprint.pprint(nums, sort_dicts=True)

palavra = 'abc'*3
for i in palavra.split(','):
  print(i)

x = 1
y = 1.0
z = "1"

if x == y:
    print("one")
if y == int(z):
    print("two")
elif x == y:
    print("three")
else:
    print("four")

# Store the current largest number here.
largest_number = -999999999

# Input the first value.
number = int(input("Enter a number or type -1 to stop: "))

# If the number is not equal to -1, continue.
while number != -1:
    # Is number larger than largest_number?
    if number > largest_number:
        # Yes, update largest_number.
        largest_number = number
    # Input the next number.
    number = int(input("Enter a number or type -1 to stop: "))

# Print the largest number.
print("The largest number is:", largest_number)

# A program that reads a sequence of numbers
# and counts how many numbers are even and how many are odd.
# The program terminates when zero is entered.

odd_numbers = 0
even_numbers = 0

# Read the first number.
number = int(input("Enter a number or type 0 to stop: "))

# 0 terminates execution.
while number != 0:
    # Check if the number is odd.
    if number % 2 == 1:
        # Increase the odd_numbers counter.
        odd_numbers += 1
    else:
        # Increase the even_numbers counter.
        even_numbers += 1
    # Read the next number.
    number = int(input("Enter a number or type 0 to stop: "))

# Print results.
print("Odd numbers count:", odd_numbers)
print("Even numbers count:", even_numbers)

counter = 5
while counter != 0:
    print("Inside the loop.", counter)
    counter -= 1
print("Outside the loop.", counter)

secret = 777
print(
"""
+================================+
| Welcome to my game, muggle!    |
| Enter an integer number        |
| and guess what number I've     |
| picked for you.                |
| So, what is the secret number? |
+================================+
""")
number = int(input('Digite um numero ' ))

while number != secret:
    
    if number == secret:
        print('Ha ha! You are stuck in my loop!')
       
    
    elif number != secret:
        number = int(input('Você errou digite um numero novamente ' ))

    else:
        print('Numero invalido')
        continue
        

print('"Well done, muggle! You are free now."')

for i in range(100):
    # do_something()
    print('pass')

from time import sleep

for i in range(0,6):
    print(f'{i} Mississipi!')
    sleep(1)

# Write a for loop that counts to five.
    # Body of the loop - print the loop iteration number and the word "Mississippi".
    # Body of the loop - use: time.sleep(1)

# Write a print function with the final message.

largest_number = -99999999
counter = 0

while True:
    number = int(input("Enter a number or type -1 to end program: "))
    if number == -1:
        break
    counter += 1
    if number > largest_number:
        largest_number = number

if counter != 0:
    print("The largest number is", largest_number ,'o programa foi executado',counter,'vezes')
else:
    print("You haven't entered any number.")

secreta = 'chupacabra'
palavra = input('Digite uma palavra ')

while True :
    
    if palavra == secreta:
        print("You've successfully left the loop.")
        break
    else: 
        palavra = input('Digite uma palavra novamente ')

# Prompt the user to enter a word
# and assign it to the user_word variable.
user_word = input('Digite uma palavra ').upper()

for letter in user_word:
    # Complete the body of the for loop.
    if letter in ['A', 'E', 'I', 'O', 'U']:
        # se a letra for uma vogal, pula para a próxima iteração do loop
        continue
    print(letter)

word_without_vowels = ""

# Prompt the user to enter a word
# and assign it to the user_word variable.
user_word = input("Introduza uma palavra: ").upper()


for letter in user_word:
    # Complete the body of the loop.

# Print the word assigned to word_without_vowels.
 # Execução condicional para ignorar as vogais
    if letter == "A":
        continue
    elif letter == "E":
        continue
    elif letter == "I":
        continue
    elif letter == "O":
        continue
    elif letter == "U":
        continue
    else:
        # Concatenar as letras não vogais numa string
        word_without_vowels += letter

# Imprimir a palavra sem as vogais
print(word_without_vowels)

def fun_x(x):
    x=x+'2'
    x=x*2
    return x
print(fun_x('python'))

for i in range(10,-1,-1):
   s = i
   print(s)

nums = [10, 20, 30]
temp =nums
nums.append(temp)
print(nums)

def func(x):
 x[0]='def'
 x[1]='abc'
 return id(x)
q = ['abc', 'def']
print(id(q) == func(q))

s = "1234"
print(list(s))

#manipulando arquvios

def escrever_arquivo():
    nome_arquivo = input("Digite o nome do arquivo: ")
    conteudo = input("Digite o conteúdo do arquivo: ")

    with open(nome_arquivo, 'w') as arquivo:
        arquivo.write(conteudo)
        print(f"Arquivo {nome_arquivo} salvo com sucesso!")

def ler_arquivo():
    nome_arquivo = input("Digite o nome do arquivo: ")

    with open(nome_arquivo, 'r') as arquivo:
        conteudo = arquivo.read()
        print(conteudo)        

escrever_arquivo()  
ler_arquivo()

#We need a function that can transform a number (integer) into a string.

#What ways of achieving this do you know?

'''Examples (input --> output):
123  --> "123"
999  --> "999"
-100 --> "-100"'''

number = int(input('Digite um numero: '))
number2 = str(number)
print(number2)

a = int(input('Digite: '))
b = int(input('Digite: '))

c = a // b
d = a / b
print(c)
print(d)

if __name__ == '__main__':
    n = int(input())
    seq = ''.join(str(i) 
    for i in range(1, n+1))
    print(seq)

#listando repositórios do GitHub

import requests

class ListaRepositorio():
    
    def __init__(self,usuario):
        self._usuario = usuario
        
        
    def requisicao_api(self):
        
        resposta = requests.get( f'https://api.github.com/users/{self._usuario}/repos')
        
        if resposta.status_code == 200:
            return resposta.json()
        else:
            return resposta.status_code    
        
    def imprime_repositorios(self):
        
        dados_api = self.requisicao_api()
        
        if type(dados_api) is not int:
            for i in range(len(dados_api)):
                print(dados_api[i]['name'])
        else:
            print(dados_api)
            
            
repositorios = ListaRepositorio('VonBeckera')
repositorios.imprime_repositorios()

pip install flask
pip install pandas
pip install watchdog
pip install xlsxwriter

from flask import Flask, request, jsonify
import pandas as pd
import os

app = Flask(__name__)

# Define o caminho para o arquivo Excel
excel_path = 'caminho/para/o/arquivo/excel.xlsx'

# Lê os dados do Excel
df = pd.read_excel(excel_path)

# Define a rota para receber os dados do Excel
@app.route('/update', methods=['POST'])
def update_excel():
    global df

    # Lê os dados enviados via POST
    data = request.json

    # Atualiza o dataframe com os novos dados
    df = pd.DataFrame(data)

    # Salva os dados no arquivo Excel
    writer = pd.ExcelWriter(excel_path, engine='xlsxwriter')
    df.to_excel(writer, index=False)
    writer.save()

    return jsonify({'status': 'success'})

# Define a rota para retornar os dados do Excel
@app.route('/data')
def get_data():
    global df
    return df.to_json(orient='records')

if __name__ == '__main__':
    app.run(debug=True)

"""CURSO EM VÍDEO -> MUNDO 03 -> AULA 16 TUPLAS


"""

#TUPLAS#COmeçam com ()

lanches = ('Hamburguer','Suco','Pizza','Pudim','Batata Frita')
#print(lanches)
#print(lanches[0])
#print(lanches[:2])
#print(lanches[2:])
#print(lanches[-2])
#print(lanches[1:3])
#print(lanches[1:2:1])

#imprimir a tupla sem posição
for cont in lanches:
  print(cont)

print('=='*30)
#imprimir usando o elemento da tupla com sua posição impressa
for cont in range(0,len(lanches)):
  print(f'Eu comi: {lanches[cont]} posição: {cont}')

print('=='*30)
#imprimir usando o elemento da tupla com sua posição impressa usando enumerate
for pos,cont in enumerate(lanches):
  print(f'Eu comi: {cont} na posicção {pos}')

print('=='*30)

#colocando a tupla para exibir elementos em ordem
print(sorted(lanches))

print('=='*30)
'''
for i in lanches:
  print(i)

testar = 'Refri' not in lanches
testar2 = 'Refri' in lanches

if testar == True:
  print('e verdadeiro que Refri não faz parte da lista')
if testar2 == False:
  print('Refri não faz parte da lista')  

print(testar)
print(testar2)'''

lanches = ('Hamburguer','Suco','Pizza','Pudim','Batata Frita','Suco')
lanches2 = ('macarrao','bolo','sorvete')
lanches3 = lanches + lanches2

print(lanches3)
print('=='*50)

print(sorted(lanches3))
print('=='*50)

for pos,cont in enumerate(lanches):
  print(f'Eu comi: {cont} na posicção {pos}')
print('=='*50)

#achando a primeira ocorrencia de um objeto index()
print(lanches.index('Suco'))  
print('=='*50)

#quantas vezes aparece um objeto count()
print(lanches.count('Suco'))

#72  Crie um programa que tenha uma dupla totalmente preenchida com uma contagem por extenso, 
#de zero até vinte. Seu programa deverá ler um número pelo teclado (entre 0 e 20) e mostrá-lo por extenso. 

numeros_por_extenso = ('zero', 'um', 'dois', 'três', 'quatro', 'cinco', 'seis', 'sete', 'oito', 'nove', 'dez', 'onze', 'doze', 'treze', 'catorze', 'quinze', 'dezesseis', 'dezessete', 'dezoito', 'dezenove', 'vinte')

while True:
    numero = int(input('Digite um valor entre 0 e 20: '))
    op = input('Deseja continuar? [S/N] ').strip().upper()

    if op == 'N':
      break

    else:
      print(f'O número que você digitou foi {numeros_por_extenso[numero]}.')
      continue  
    
    if numero >= 0 and numero <= 20:
      break

    else:
        print('Número inválido. Tente novamente.')
        
    
    

print(f'O número que você digitou foi {numeros_por_extenso[numero]}.')

#73: Crie uma tupla preenchida com os 20 primeiros colocados da Tabela do 
#Campeonato Brasileiro de Futebol, na ordem de colocação. Depois mostre:
#a) Os 5 primeiros times.
#b) Os últimos 4 colocados.
#c) Times em ordem alfabética. 
#d) Em que posição está o time da Chapecoense.

campeonato_brasileiro = ("Palmeiras", "Atlético-MG", "Fortaleza", "Bragantino", "Athletico-PR", 
                        "Fluminense", "Flamengo", "Cuiabá", "Santos", "Atlético-GO", 
                        "Corinthians", "Internacional", "Juventude", "Ceará", "São Paulo", 
                        "Sport Recife", "América-MG", "Grêmio", "Bahia", "Chapecoense")


print(f'O 5 primeiros times são: {campeonato_brasileiro[0:5]}')

print(f'O 4 últimos colocados são os times: {campeonato_brasileiro[-4:]}')

print(f'O 4 últimos colocados são os times: {sorted(campeonato_brasileiro)}')

print(f'O Chapecoense está na: {campeonato_brasileiro.index("Chapecoense")+1}ª posição')

tpl = (1,2,3,4,5)
print(tpl.index(3, 2, 4))

#074 - Maior e menor valores em Tupla sorteado
from random import randint
lista = (randint(0,10),randint(0,10),randint(0,10),randint(0,10),randint(0,10))
print(f'O valores sorteados são: {lista}')
print(f'\nO maior valor foi {max(lista)} \nO menor valor foi {min(lista)}')

#75 Desenvolva um programa que leia quatro valores pelo teclado e guarde-os em uma tupla. No final, mostre:

#A) Quantas vezes apareceu o valor 9.

#B) Em que posição foi digitado o primeiro valor 3.

#C) Quais foram os números pares.

lista = []
cont = 0
pares=[]
for i in range(1,5):
  n = int(input((f'Digite o {i}ª número: ')))
  lista.append(n)

  #if n == 9:
    #cont +=1
for i in lista:
  if i % 2 == 0:
    pares.append(i)

  
tupla_lista = tuple(lista)
pares_tupla = tuple(pares)
cont_nove = tupla_lista.count(9)


print(f'A tupla é : {tupla_lista}')
print('-=-'*15)
if 3 in lista:
  print('-=-'*15)
  print(f'A posição do número 3 é : {tupla_lista.index(3)+1} posição')
  print('-=-'*15)
else:
  print('-=-'*15)
  print('O número 3 não foi encontrado')  
  print('-=-'*15)
print(f' número 9 apareceu {cont_nove} vezes')
print('-=-'*15)
print(f'Os números pares são:{pares_tupla} ')  
print('-=-'*15)

#76: Crie um programa que tenha uma tupla única com nomes de produtos e seus 
#respectivos preços, na sequência. No final, mostre uma listagem de preços, organizando os dados em forma tabular.

ls = ('Agua',2.50,
      'Refrigerante',2,
      'Hamburguer', 5,
      'Pizza',25,
      'Batat Frita',10)

print('='*40)
print(f'{"LISTAGEM DE PREÇOS":^40}')
print('='*40)
for p in range(len(ls)):
  if p % 2 == 0:
    print(f'{ls[p]:.<30}',end='')
  else:
    print(f'R${ls[p]:>5.2f}')
print('='*40)

#treinamento

lista = ('Lápis', 0.75,'Tesoura' , 1.75, 'Caderno 12 matérias', 20,'Cola Branca', 4,'Caneta Bic',1.25)
print('='*40)
print(f'{"LISTA DE PREÇOS":^40}')
print('='*40)
for i in range(len(lista)):
  if i % 2 == 0:
    print(f'{lista[i]:.<30}', end=' ')
  else:
    print(f'R${lista[i]:>6.2f}')  
print('='*40)   

print(lista[0])
print(lista[1])#indice ímpar mostra o valor do produto
print(lista[2])#Indice par mostra nome do produto

#077: Crie um programa que tenha uma tupla com várias palavras (não usar acentos).
# Depois disso, você deve mostrar, para cada palavra, quais são as suas vogais.
vogais = []
palavras = ('cafe', 'lapis', 'agua', 'refrigerante', 'cera','python')

for p in palavras:
  print(f'\nNa palavra {p.upper()} temos as vogais:', end=' ')
  for letra in p:
    if letra.lower() in 'aeiouy':
      print(letra, end=' ')

"""CURSO EM VÍDEO -> Mundo 03 PYTHON -> AULA 17 LISTA []"""

# Listas [ ]
'''num = [1,2,5,3,4,9,83,6,8,7]
num.sort()#ordem crescente
num.remove(83)#remove o valor 83 da lista
num.insert(0,0)# insere o valor 0 na posição 0
num.pop()#remove o último elemento da lista com pop
num.pop(3)#remove o número 3 da lista
num.append(10)#add número 10 a lista
num.append(2)#add número 2 a lista
print(f'A lista tem {len(num)} elementos')
print(num.index(4))# Mostra a posição do número 10
print(num)  

for i in range(len(num)):#removendo todas as ocorrências de um determinado valor ou o que for solicitado na lista
  if 2 in num:
    num.remove(2)

print(num)  
'''

lista = []
lista.append(0)
lista.append(1)
lista.append(2)

for v in lista:
  print(f'Os valores são {v}')#imprimindo de forma mais elaborada,formatada


for c,v in enumerate(lista):# Imprimindo lista com a posição e o valor
  print(f'Os valor da posição {c}ª é {v}')

print(lista)

lista2 = []
for cont in range(0,10):
  lista2.append(int(input('Digite um valor: ')))

print(lista2)  
print(f'O mairo valor é: {max(lista2)}')

#USANDO VOZES NO PYTHON

import pyttsx3

# inicializa a engine
engine = pyttsx3.init()

# configura as propriedades da voz robótica
voice_id = 'HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens\TTS_MS_PT-BR_MARIA_11.0'
engine.setProperty('voice', voice_id)  # selecione uma voz robótica
# fala um texto com a voz robótica

engine.say("Qual é o seu nome? ")
engine.runAndWait()

nome=str(input('Nome: '))

engine.say(f'Seja bem vindo{nome}, eu sou a Anna,  o que vamos fazer hoje?')
engine.runAndWait()

engine.say(f'Escolhas as opções: 1- cadastrar 2 - Sair')
engine.runAndWait()
op = int(input('Opção: '))
if op == 1 :
    engine.say("Digite sua idade e sexo:")
    engine.runAndWait()
    idade=int(input('Idade: '))
    sexo=str(input('Sexo: '))
    engine.say(f'Sua idade é de {idade} anos e seu sexo é {sexo}, obrigado por utilizar nosso sistema')
    engine.runAndWait()
elif op == 2 :
    engine.say(f'Saindo do sistema {nome} até mais..')
    engine.runAndWait()

else:
    engine.say(f'Opção errado..')
    engine.runAndWait()

from random import randint

lista = []

for i in range(0,11):
  sorte = randint(0,10)
  lista.append(sorte)
  print(f'{lista[i]}', end =' ')

for i in range(len(lista)):
  for j in range(i+1, len(lista)):
    if lista[i] == lista[j]:
            lista.pop(j)
            break




print(f'\n{sorted(lista)}',end = '')

"""# USANDO MATPLOTLIB

Criando primeiro gráfico
[MATPLOTLIB SITE OFICIAL](https://matplotlib.org/stable/users/getting_started/)
"""

import matplotlib.pyplot as plt
import numpy as np

x = np.linspace(0, 2 * np.pi, 200)
y = np.sin(x)

fig, ax = plt.subplots()
ax.plot(x, y)
plt.show()

import pandas as pd

df = pd.DataFrame(
    {
        "Name": [
            "Braund, Mr. Owen Harris",
            "Allen, Mr. William Henry",
            "Bonnell, Miss. Elizabeth",
            "Becker,Mrs. Davi",
        ],
        "Age": [22, 35, 58, 60],
        "Sex": ["male", "male", "female","male"],
    }
)

#idade_maxima = df['Age'].max()#imprimindo a idade maxima
#print(f'A idade máxima de lista é\n: {idade_maxima}\n anos')
#df['Name']#Imprimindo somente os nomes
#df.describe()#é um método do pandas que retorna um resumo estatístico das colunas numéricas em um DataFrame.
#mean é a média aritmética dos valores na coluna correspondente  é o desvio padrão dos valores na coluna correspondente. 
#O desvio padrão é uma medida de quão dispersos os valores estão em torno da média
#df['Sex']#imprime somente o sexo
print(df.iloc[2])#imprime as informações do indece 2

df.to_excel("df.xlsx", sheet_name="passengers", index=False)#grava o dataframe em um planilha excel

import matplotlib.pyplot as plt
plt.plot([1, 2, 3, 4])
plt.ylabel('some numbers')
plt.show()

"""# Python UNINTER AULAS DE DATA SCIENCE

NUMPY 1 - Lista X Array
"""

# listas versus array numpy
import numpy as np

num_elementos = 100000000
#lista_elementos = []

#for x in range(num_elementos):
 # lista_elementos.append(x)
#print(lista_elementos[-1])  
#tempo de execução 21 segundos e 4,8Gb de Memória

#AARRAY NUMPY
#0 segundos e 300MB de memória
array_elementos = np.arange(num_elementos)

print(array_elementos[-1])

"""NUPY 2 - criando um lista de array com numpy"""

#criando um lista de array com numpy
import numpy as np
array_numpy = np.array([0,1,2,3,4,5,6,7,8,9])
numpy = [0,1,2,3,4,5,6,7,8,9]

#10 elementos 0 a 9 matriz
print(np.arange(10).reshape(2,5))

print(np.arange(100+1))

print(f'Criando um array de 40 elementos usando LINSPACE 0 a 40 com 41 elementos\n {np.linspace(0,40, num =41)}\n')

print(f'Criando array usando numpy com metódo .array: \n{array_numpy}\n')
print(f'Criando array usando numpy com metódo .ones: \n{np.ones(10)}\n')#ponto flutuante de 64bits 1.
print(f'Criando array usando numpy com metódo .zeros: \n{np.zeros(10)}\n')#ponto flutuante de 64bits 0.
print(f'Criando array usando numpy com metódo .reshape matrizes: \n{np.array(array_numpy).reshape(2,5)}\n')#Criando matriz

"""NUMPY 3 - TESTANDO CONSUM DE MEMÓRIA"""

#testando tipos de dados e consumo de memoria

import numpy as np

elementos = 1000000000000
array_elementos = np.zeros(elementos)#, dtype = np.int8)
print(array_elementos)

"""NUMPY 5 - CRIANDO NÚMEROS RANDÔMICOS"""

#criando numeros randômicos

num = np.random.default_rng()

print(num.random(10))

"""NUMPY 6 - VETOR,MATRIZ E TENSOR"""

#Matrizes, vetores e tensores
num = np.random.default_rng()
vetor = num.random(4)
print(f'Array de 1 dimensão = VETOR {vetor}\n')
print('-=-'*30)
matriz = num.random([3,3])
print(f'Array de 2 dimensões = MATRIZ \n {matriz}\n')
print('-=-'*30)
tensor = num.random([3,3,3,3])
print(f'Array de 3 ou mais dimensões = TENSOR \n {tensor}\n')
print('-=-'*30)

"""NUMPY 7 ORDENAÇÃO E ADIÇÃO DE ELEMENTOS

"""

#NUMPY 7 ORDENAÇÃO E ADIÇÃO DE ELEMENTOS
import numpy as np

ngr = np.random.default_rng()

array_1 = ngr.random([5,5])

print(f'Array 1 SEM ORENAÇÃO:\n {array_1}\n')
print(f'Array 2 ORENAÇÃO SIMPLES: \n {np.sort(array_1)}\n')
print(f'Array 2 ORENAÇÃO SIMPLES HORIZONTAL EIXO X AXIS: \n {np.sort(array_1, axis=None)}\n')#Eixo horizontal apenas linhas
print(f'Array 2 ORENAÇÃO SIMPLES Colunas: \n {np.sort(array_1, axis=0)}\n')#Ordena Colunas

import seaborn as sns
import matplotlib.pyplot as plt

tips = sns.load_dataset("tips")

sns.barplot(x="sex", y="total_bill", data=tips)

plt.show()

tips = sns.load_dataset("tips")

sns.barplot(x="sex", y="total_bill", hue="size", data=tips)

plt.show()

import re

cep = '72235-500'
cep2 = r'[\d]{5}-[\d]{3}'
if re.match(cep2, cep):
  print(True)
else:
  print(False)

import plotly.express as px
import ipywidgets as widgets

# carregar o conjunto de dados "gapminder"
df = px.data.gapminder()

# criar o gráfico de dispersão com Plotly Express
fig = px.scatter(df, x="gdpPercap", y="lifeExp", size="pop", color="continent",
                 hover_name="country", log_x=True, size_max=60)

# criar um slider de ano
slider = widgets.IntSlider(min=df["year"].min(), max=df["year"].max(), step=1, value=df["year"].min())

# definir uma função para atualizar o gráfico com base no valor do slider
def update_plot(year):
    # filtrar o conjunto de dados para o ano selecionado
    df_year = df[df["year"] == year]
    
    # atualizar os dados do gráfico
    fig.data[0].x = df_year["gdpPercap"]
    fig.data[0].y = df_year["lifeExp"]
    fig.data[0].marker.size = df_year["pop"] / 1e6
    
    # atualizar o título do gráfico com o ano selecionado
    fig.update_layout(title=f"GDP per Capita vs. Life Expectancy ({year})")
    
    # exibir o gráfico
    fig.show()

# conectar o slider à função de atualização
widgets.interact(update_plot, year=slider)

#CRIPTOGRAFIA COM AES
from cryptography.fernet import Fernet
from getpass import getpass

def aes_encrypt(message, key):
    f = Fernet(key)
    encrypted_message = f.encrypt(message.encode())
    return encrypted_message

def aes_decrypt(encrypted_message, key):
    f = Fernet(key)
    decrypted_message = f.decrypt(encrypted_message)
    return decrypted_message.decode()

mensagem_original = getpass("Digite a mensagem que deseja criptografar: ")
chave = Fernet.generate_key()

mensagem_criptografada = aes_encrypt(mensagem_original, chave)
print("Mensagem criptografada:", mensagem_criptografada)

mensagem_descriptografada = aes_decrypt(mensagem_criptografada, chave)
print("Mensagem descriptografada:", mensagem_descriptografada)

i = 0
while i <= 3:
  i+=2
  print("*")

''' O código irá imprimir a lista [1, 2, 3] quatro vezes, pois o loop for será 
executado 4 vezes devido ao uso do operador de deslocamento de bits << que multiplica o valor de len(lista) por 2 elevado a 2 (ou seja, 4).

No primeiro ciclo do loop, i será igual a 0 e a lista [1, 2, 3] será impressa.
No segundo ciclo, i será igual a 1 e a lista [1, 2, 3] será impressa novamente. 
O loop continuará a executar até que i seja igual a 11 (pois len(lista) é igual 
a 3 e multiplicado por 4 dá 12, mas como a contagem começa em 0, o loop terminará quando i for igual a 11).
No entanto, como a lista é sempre a mesma e não há nenhuma mudança sendo feita na mesma dentro do loop, 
o resultado será apenas a impressão da lista [1, 2, 3] quatro vezes.
'''
#lista = [1,2,3]
#for i in range(len(lista)<<50):
  #print(lista,i)

#for i in range(10<<10):
  #print('@',i)  

b = bin((10^2)*10)

print(b[2:])

a = bin(14)
b = a[2:]
print(b)

14 >> 9

from random import randint

def gerar_ISBN():
  isbn = "9"
  print(isbn, end='')

  for i in range(12):
    isbn += str(randint(0,9))
    print(isbn[-1], end='')

  return isbn

def validar_ISBN13(isbn):
  if len(isbn) != 13:
    return False

  soma = 0
  for i in range(12):
    if i % 2 == 0:
      soma += int(isbn[i])
    else:
      soma += 3 * int(isbn[i])

  verif = (10 - (soma % 10)) % 10

  return int(isbn[12]) == verif

# exemplo de uso
isbn = gerar_ISBN()
if validar_ISBN13(isbn):
  print("\nO ISBN-13", isbn, "é válido")
else:
  print("\nO ISBN-13", isbn, "é inválido")

from itertools import permutations



list1 = ["A", "B", "C"]

print(len(list(permutations(list1, 3))))

'''palavra = "A screaming comes across the sky."
nova = palavra.replace('s','$')
print(nova)

p = "Hemingway"
p2= p.find('m')
print(p2)

string = 'O um anel para todos dominar'
print(string)

concatenacao = 't'+'h'+'r'+'e'+'e','t'+'h'+'r'+'e'+'e','t'+'h'+'r'+'e'+'e'
multi =('Three '*3)
print(multi)
print(concatenacao)
fatiar = "It was a bright cold day in April, and the clocks were striking thirteen."
novaFatiar = fatiar[:34]
print(novaFatiar)

palavra= 'camus'
print(palavra[0])
print(palavra[1])
print(palavra[2])
print(palavra[3])
print(palavra[4])

frase =  ('Yesterday I wrote a [resposta_um]. I sent it to [resposta_dois]!')

r1 = input('Digite a resposta 1: ')
r2 = input('Digite a resposta 2: ')
novaFrase = (f'Yesterday I wrote a {r1}. I sent it to {r2}!')
print(novaFrase)

frase2 = "aldous Huxley was born in 1894."
maiuscula = frase2.capitalize()
print(maiuscula)

lista =["The", "fox", "jumped", "over", "the", "fence", "."]
correta = ' '.join(lista).replace(' .','.')
print(correta)

lst = "Where now? Who now? When now?".split("?")
print(lst)'''

# Usando for para deixar tudo maiusculo:

lista = 'A medalha foi dada a ele'

for i in lista:
  x = lista.upper()
print(x)

name = ['davi','pedro','maria']
for i in name:
  print(i)

